{"name":"Chef Users","tagline":"Chef Cookbook to Manage Users/Groups","body":"usersdb Cookbook\r\n================\r\n\r\nThis is a [Chef] cookbook to manage Users, Groups and Group Membership on Linux platform using node attribute and LWRP.\r\n\r\n## Repository\r\n\r\nhttps://github.com/vkhatri/chef-users-db\r\n\r\n\r\n## Recipes\r\n\r\n- `usersdb::default` - default recipe (required for run_list)\r\n\r\n\r\n## Data Bag Items\r\n\r\nAll Users and Groups information must exists in a Databag `node['usersdb']['databag']`.\r\n\r\nBelow Databag items are required for this cookbook and must exists.\r\n\r\n* groups\r\n* users\r\n* group_members\r\n\r\n>> Note: All user, group & group members information is defined in data bag items, node attribute or lwrp can only create or delete a user / group.\r\n\r\n### Databag Item - groups\r\n\r\nDatabag item `groups` contains information about **groups**. All groups infromations are stored as a `Hash` under attribute `users` as shown below.\r\n\r\n```\r\n{\r\n  \"id\": \"groups\",\r\n  \"description\": \"Groups List\",\r\n  \"groups\": {\r\n    \"failsafe\": {\r\n      \"id\": 2000\r\n    },\r\n    \"foo\": {\r\n      \"id\": 2001\r\n    },\r\n    \"dev\": {\r\n      \"id\": 2002,\r\n      \"system\": true\r\n      \"action\": \"delete\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nBelow attributes are supported for a group:\r\n\r\n* id (required) - group id\r\n* action (optional, default: `create`) - action for group # options: create, delete, ignore\r\n* system (optional, default: `false`) - whether to create a system group # options: true, false, null\r\n\r\n\r\n### Databag Item - users\r\n\r\nDatabag item `users` contains information about **users**. All users infromations are stored as a `Hash` under attribute `groups` as shown below.\r\n\r\n```\r\n{\r\n  \"id\": \"users\",\r\n  \"description\": \"Users List\",\r\n  \"users\": {\r\n    \"failsafe\": {\r\n      \"id\": 2000\r\n    },\r\n    \"foo\": {\r\n      \"password\": \"$1$2koxPft9$tLyHD6KFEoHvr8BDxhfBk0\"\r\n      \"full_name\": \"Foo User\",\r\n      \"id\": 2001,\r\n      \"group\": \"foo\",\r\n      \"login_shell\": \"/bin/customshell\",\r\n      \"home_directory\": \"/mnt/foo\",\r\n      \"manage_home\": true,\r\n      \"public_keys\": [\r\n      \t\"ssh-rsa AAAAâ€¦.z remoteuser\"\r\n      ]\r\n    },\r\n    \"app\": {\r\n      \"full_name\": \"Service App\",\r\n      \"id\": 2002,\r\n      \"group\": \"app\",\r\n      \"system\": true,\r\n      \"action\": \"delete\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n```\r\nNote: user password must be a hash, you can use openssl to generate a linux user password hash.\r\n\r\n$ openssl passwd -1 \"PASSWORD\"\r\n```\r\n\r\nBelow attributes are supported for a group:\r\n\r\n* id (required) - user id\r\n* group (required) - user primary group\r\n* action (optional, default: `create`) - action for user # options: create, delete, ignore\r\n* system (optional, default: `false`) - whether to create a system user # options: true, false, null\r\n* password (optional, default: `nil`) - user password hash\r\n* full_name (optional, default: `user name`) - user full name\r\n* login_shell (optional, default: `node['usersdb']['default_shell']`) - user login shell\r\n* home_directory (optional, default: `node['usersdb']['default_home']/#{user}`) - user home directory\r\n* manage_home (optional, default: `node['usersdb']['manage_home']`) - whether to manage user home directory\r\n* public_keys (optional, default: `nil`) - adds list of user ssh public key to use `$HOME/.ssh/authorized_keys` file if attribute `node['usersdb']['manage_ssh_dir']` and `node['usersdb']['manage_authorized_keys']` is set\r\n\r\n\r\n### Databag Item - group_members\r\n\r\nDatabag item `group_members` contains information about **group members**. All groups, members informations are stored as an `Array` under attribute `group_members` as shown below.\r\n\r\n```\r\n{\r\n  \"id\": \"group_members\",\r\n  \"description\": \"Groups Members List\",\r\n  \"group_members\": {\r\n    \"foo\": [\r\n      \"foo\"\r\n    ],\r\n    \"dev\": [\r\n      \"dev\",\r\n      \"app\"\r\n    ],\r\n    \"failsafe\": [\r\n      \"failsafe\"\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nNote: While deleting an user, make sure to delete the user from this Databag item. A Group\r\n\r\n\r\n\r\n## Usage\r\n\r\nThis cookbook can be used either with limited LWRP or using node attributes.\r\n\r\n>> Note: All user, group & group members information is defined in data bag items, node attribute or lwrp can only create or delete a user / group.\r\n\r\n### Add Group and Group Members\r\n\r\n*Using LWRP*\r\n\r\n```\r\nusersdb_group group_name do\r\nend\r\n```\r\n\r\n*Using Node Atrbitute - node['groups']*\r\n\r\n```\r\n  \"default_attributes\": {\r\n    \"groups\": {\r\n      \"foo\": {},\r\n      \"dev\": {},\r\n      \"failsafe\": {}\r\n  }\r\n```\r\n\r\n\r\n### Remove Group and Group Members\r\n\r\n*Using LWRP*\r\n\r\n```\r\nusersdb_group group_name do\r\n  action :delete\r\nend\r\n```\r\n\r\n*Using Node Atrbitute - node['groups']*\r\n\r\n```\r\n  \"default_attributes\": {\r\n    \"groups\": {\r\n      \"foo\": {\r\n      \t\"action\": \"delete\"\r\n      },\r\n      \"dev\": {\r\n      \t\"action\": \"delete\"\r\n      }\r\n  }\r\n```\r\n\r\n### Add User\r\n\r\n*Using LWRP*\r\n\r\n```\r\nusersdb_user user_name do\r\nend\r\n```\r\n\r\n*Using Node Atrbitute - node['groups']*\r\n\r\n```\r\n  \"default_attributes\": {\r\n    \"users\": {\r\n      \"foo\": {},\r\n      \"dev\": {},\r\n      \"failsafe\": {}\r\n  }\r\n```\r\n\r\n### Delete User\r\n\r\n*Using LWRP*\r\n\r\n```\r\nusersdb_user user_name do\r\n  action :delete\r\nend\r\n```\r\n\r\n*Using Node Atrbitute - node['groups']*\r\n\r\n```\r\n  \"default_attributes\": {\r\n    \"users\": {\r\n      \"foo\": {\r\n      \t\"action\": \"delete\"\r\n      },\r\n      \"dev\": {\r\n      \t\"action\": \"delete\"\r\n      }\r\n  }\r\n```\r\n\r\n## Attributes\r\n\r\n* `default['usersdb']['disable_cookbook']` (default: `false`): ignore user/group management\r\n\r\n* `default['usersdb']['manage_ssh_dir']` (default: `true`): whether to create $HOME/.ssh directory\r\n\r\n* `default['usersdb']['manage_authorized_keys']` (default: `true`): whether to add user ssh keys to $HOME/.ssh/authorized_keys from data bag\r\n\r\n* `default['usersdb']['manage_home']` (default: `true`): whether to manage user home $HOME directory\r\n\r\n* `default['usersdb']['default_home']` (default: `/home`): user $HOME parent directory\r\n\r\n* `default['usersdb']['databag']` (default: `usersdb`): databag name\r\n\r\n* `default['usersdb']['users']` (default: `{}`): users Hash node attribute\r\n\r\n* `default['usersdb']['groups']` (default: `{}`): groups Hash node attribute\r\n\r\n\r\n## Contributing\r\n\r\n1. Fork the repository on Github\r\n2. Create a named feature branch (like `add_component_x`)\r\n3. Write your change\r\n4. Write tests for your change (if applicable)\r\n5. Run the tests (`rake`), ensuring they all pass\r\n6. Write new resource/attribute description to `README.md`\r\n7. Write description about changes to PR\r\n8. Submit a Pull Request using Github\r\n\r\n\r\n## Copyright & License\r\n\r\nAuthors:: Virender Khatri and [Contributors]\r\n\r\n<pre>\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n</pre>\r\n\r\n\r\n[Chef]: https://www.chef.io/\r\n[Contributors]: https://github.com/vkhatri/chef-users-db/graphs/contributors\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}